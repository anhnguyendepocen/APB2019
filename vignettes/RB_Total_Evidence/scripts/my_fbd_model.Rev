speciation_rate ~ dnExponential(10)
extinction_rate ~ dnExponential(10)

moves[mvi++] = mvScale(speciation_rate, lambda=0.01, weight=1)
moves[mvi++] = mvScale(speciation_rate, lambda=0.1,  weight=1)
moves[mvi++] = mvScale(speciation_rate, lambda=1.0,  weight=1)

moves[mvi++] = mvScale(extinction_rate, lambda=0.01, weight=1)
moves[mvi++] = mvScale(extinction_rate, lambda=0.1,  weight=1)
moves[mvi++] = mvScale(extinction_rate, lambda=1,    weight=1)

diversification := speciation_rate - extinction_rate
turnover := extinction_rate/speciation_rate

rho <- 1.0

psi ~ dnExponential(10) 
moves[mvi++] = mvScale(psi, lambda=0.01, weight=1)
moves[mvi++] = mvScale(psi, lambda=0.1,  weight=1)
moves[mvi++] = mvScale(psi, lambda=1,    weight=1)

origin_time ~ dnUnif(37.0, 55.0)
moves[mvi++] = mvSlide(origin_time, delta=0.01, weight=5.0)
moves[mvi++] = mvSlide(origin_time, delta=0.1,  weight=5.0)
moves[mvi++] = mvSlide(origin_time, delta=1,    weight=5.0)

fbd_dist = dnFBDP(origin=origin_time, lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=rho, taxa=taxa)

clade_ursinae = clade("Melursus_ursinus", "Ursus_arctos", "Ursus_maritimus", 
                      "Helarctos_malayanus", "Ursus_americanus", "Ursus_thibetanus", 
                      "Ursus_abstrusus", "Ursus_spelaeus")
                      
constraints = v(clade_ursinae)
fbd_tree ~ dnConstrainedTopology(fbd_dist, constraints=constraints)

moves[mvi++] = mvFNPR(fbd_tree, weight=15.0)
moves[mvi++] = mvCollapseExpandFossilBranch(fbd_tree, origin_time, weight=6.0)
moves[mvi++] = mvNodeTimeSlideUniform(fbd_tree, weight=40.0)
moves[mvi++] = mvRootTimeSlideUniform(fbd_tree, origin_time, weight=5.0)

intervals = readDataDelimitedFile(file="data/bears_fossil_intervals.tsv", header=true)

for(i in 1:intervals.size())
{
    taxon  = intervals[i][1]
    a_i = intervals[i][2]
    b_i = intervals[i][3]
    
    t[i] := tmrca(fbd_tree, clade(taxon))
        
    fossil[i] ~ dnUniform(t[i] - b_i, t[i] - a_i)
    fossil[i].clamp( 0 )
}

moves[mvi++] = mvFossilTimeSlideUniform(fbd_tree, origin_time, weight=5.0)

num_samp_anc := fbd_tree.numSampledAncestors()


clade_extant = clade("Ailuropoda_melanoleuca","Tremarctos_ornatus","Melursus_ursinus",
                    "Ursus_arctos","Ursus_maritimus","Helarctos_malayanus",
                    "Ursus_americanus","Ursus_thibetanus")
age_extant := tmrca(fbd_tree, clade_extant)

age_Kretzoiarctos_beatrix   := tmrca(fbd_tree, clade("Kretzoiarctos_beatrix"))

#pruned_tree := fnPruneTree(fbd_tree, pruneTaxa=v("Ursus_abstrusus","Parictis_montanus"))

